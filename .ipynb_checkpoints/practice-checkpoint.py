{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "v = 10\n",
    "x = 1\n",
    "print(x+x+v)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2, 3, 5)\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "x = np.random.rand(2,3,5)\n",
    "print(x.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.10757639 0.64619236 0.93200551]\n",
      " [0.60819281 0.82483779 0.71427252]]\n"
     ]
    }
   ],
   "source": [
    "print(x[:, :, 0])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[0.10757639 0.95757906 0.82716038 0.28002292 0.62710694]\n",
      "  [0.64619236 0.30188228 0.00610286 0.1339962  0.18809898]\n",
      "  [0.93200551 0.7114519  0.50036503 0.59327473 0.03803844]]\n",
      "\n",
      " [[0.60819281 0.16137762 0.61820818 0.92547245 0.18414951]\n",
      "  [0.82483779 0.069885   0.35160212 0.31316608 0.18117816]\n",
      "  [0.71427252 0.7807335  0.58546878 0.77998338 0.62322406]]]\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 1 2 3 4]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "x = np.arange(5)\n",
    "np.save('myFile.npy', x)\n",
    "y = np.load('myFile.npy')\n",
    "print(y)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.         0.06122449 0.12244898 0.18367347 0.24489796 0.30612245\n",
      " 0.36734694 0.42857143 0.48979592 0.55102041 0.6122449  0.67346939\n",
      " 0.73469388 0.79591837 0.85714286 0.91836735 0.97959184 1.04081633\n",
      " 1.10204082 1.16326531 1.2244898  1.28571429 1.34693878 1.40816327\n",
      " 1.46938776 1.53061224 1.59183673 1.65306122 1.71428571 1.7755102\n",
      " 1.83673469 1.89795918 1.95918367 2.02040816 2.08163265 2.14285714\n",
      " 2.20408163 2.26530612 2.32653061 2.3877551  2.44897959 2.51020408\n",
      " 2.57142857 2.63265306 2.69387755 2.75510204 2.81632653 2.87755102\n",
      " 2.93877551 3.        ] 50\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.linspace(0, 3, 50)\n",
    "print(x, len(x))\n",
    "y = np.exp(x)\n",
    "y2 = np.exp(2*x)\n",
    "\n",
    "plt.plot(x, y, label=\"y = exp(x)\")\n",
    "plt.plot(x, y2, label=\"y = exp(2x)\")\n",
    "plt.xlabel('x')\n",
    "plt.ylabel('y')\n",
    "plt.title('Exponential curve')\n",
    "\n",
    "plt.legend()\n",
    "plt.grid()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150\n",
      "[[-0.78974398  0.80122136]\n",
      " [-1.09716441 -0.13176916]\n",
      " [ 0.7048861   0.63859909]\n",
      " [ 1.18788611  0.68001386]\n",
      " [ 0.46839052 -0.58708606]\n",
      " [ 0.00797286 -1.08126932]\n",
      " [ 0.51619068 -1.38282326]\n",
      " [ 0.48027299  1.32192047]\n",
      " [-0.6717273  -2.20939938]\n",
      " [-0.32733019 -0.75845516]\n",
      " [ 1.03232885 -0.54496919]\n",
      " [ 3.23049122  0.97193136]\n",
      " [ 1.41244347  0.51066011]\n",
      " [-1.40980697 -1.34456946]\n",
      " [-0.38039034  0.38869203]\n",
      " [ 0.40883259  0.37033585]\n",
      " [ 0.90456383 -1.11057936]\n",
      " [ 0.71478292  1.85381667]\n",
      " [ 0.2419022  -0.92132092]\n",
      " [ 1.14525369 -0.04717721]\n",
      " [-0.51015187 -0.38744143]\n",
      " [ 0.08280268 -0.64215519]\n",
      " [ 0.11412706  1.16315889]\n",
      " [ 0.99609011  0.7898085 ]\n",
      " [-0.66854068 -0.58809673]\n",
      " [ 2.79415865  0.03906083]\n",
      " [-0.78138318  1.9057569 ]\n",
      " [-0.71132518 -0.6909115 ]\n",
      " [-0.68413232  0.23832179]\n",
      " [ 0.77334433  1.11023574]\n",
      " [-0.71148994  0.87196172]\n",
      " [ 1.63333096  0.76401486]\n",
      " [ 0.50253776  0.71120452]\n",
      " [ 0.12987207  2.57784825]\n",
      " [ 1.07809283  1.04426675]\n",
      " [ 0.23942855  0.52145928]\n",
      " [ 3.02970868  0.2694587 ]\n",
      " [-0.27761424  2.50085132]\n",
      " [-1.10320586  0.68313591]\n",
      " [ 1.70744153 -0.36727946]\n",
      " [ 0.72097164 -1.84965528]\n",
      " [ 1.85741781  0.51010859]\n",
      " [-0.66210681  0.589939  ]\n",
      " [ 0.54393298  0.8648582 ]\n",
      " [ 0.99562718 -0.54001652]\n",
      " [ 0.37913324 -0.47899715]\n",
      " [-0.47558363 -1.44752208]\n",
      " [-1.78109428 -0.12525838]\n",
      " [-0.10281878 -0.41328286]\n",
      " [ 1.44546976 -0.85832684]\n",
      " [ 0.26131951 -0.288296  ]\n",
      " [-0.44939528 -0.8607941 ]\n",
      " [ 0.02509641  0.26791528]\n",
      " [-0.03023059  0.75834404]\n",
      " [-0.53290879 -0.28572156]\n",
      " [ 0.38348942  0.63255893]\n",
      " [-1.46491479  0.79807557]\n",
      " [ 1.46711738  0.56624979]\n",
      " [ 1.95567634  0.98007627]\n",
      " [ 1.03184685 -1.9246115 ]\n",
      " [-0.76154138  1.33335036]\n",
      " [-1.02739595 -2.22668622]\n",
      " [ 0.35793361  0.81408638]\n",
      " [-0.81326884  1.0275527 ]\n",
      " [ 0.01301443 -1.45006019]\n",
      " [-0.09963681  0.37502414]\n",
      " [ 1.49232184 -0.75820017]\n",
      " [-0.27025346  0.4985295 ]\n",
      " [ 1.38303488 -1.8977208 ]\n",
      " [-1.93402884 -0.6303348 ]\n",
      " [-0.53897029  0.72388761]\n",
      " [ 0.09276315 -0.86256933]\n",
      " [-0.81337705 -1.06546495]\n",
      " [ 1.71836265 -0.31104225]\n",
      " [-1.42329673 -0.53436629]\n",
      " [ 0.70991588  0.73549614]\n",
      " [-0.55062761 -0.80202347]\n",
      " [ 0.3137401   0.77892959]\n",
      " [-0.35805561 -0.55537203]\n",
      " [-1.50307676  0.17150874]\n",
      " [-1.22445279 -0.05685278]\n",
      " [ 0.854515   -0.08788593]\n",
      " [ 0.44753173 -0.05223355]\n",
      " [-0.30404621 -0.76678366]\n",
      " [ 0.0187385  -1.53605946]\n",
      " [ 1.80569961  0.79812652]\n",
      " [-2.12113824  1.32163269]\n",
      " [ 0.67711601 -0.95278404]\n",
      " [-0.10274481  1.9120134 ]\n",
      " [ 0.97302874  0.83632103]\n",
      " [ 0.610952    0.65942476]\n",
      " [-0.44000618  0.35950152]\n",
      " [ 0.57318441  0.19141395]\n",
      " [-0.65710607 -2.87927668]\n",
      " [ 1.70929372  1.13779595]\n",
      " [ 0.01677344 -0.0903062 ]\n",
      " [-0.53494814 -0.12287873]\n",
      " [ 0.79168038  0.50785659]\n",
      " [ 1.76375417 -1.94348383]\n",
      " [ 0.23631526  1.06164989]\n",
      " [ 1.70580874  0.99030975]\n",
      " [-0.50659932 -0.3023106 ]\n",
      " [ 0.6064319  -1.61620505]\n",
      " [-0.17620891 -1.69671317]\n",
      " [ 1.92493567  0.24782074]\n",
      " [ 0.10224742  0.67408805]\n",
      " [-0.73814208  0.19564772]\n",
      " [-0.93834063  1.6570091 ]\n",
      " [-0.87841114 -0.1773136 ]\n",
      " [-0.55278599 -0.54353213]\n",
      " [ 0.28672868  0.57371962]\n",
      " [-0.1400904  -0.531163  ]\n",
      " [-0.76746931  0.48311561]\n",
      " [-1.02283808  1.33603107]\n",
      " [-0.39370976 -0.20270788]\n",
      " [ 0.45944908  2.08602091]\n",
      " [-0.05208613  1.85318553]\n",
      " [-0.95486335 -2.71453304]\n",
      " [ 0.70773045  0.29633004]\n",
      " [ 1.04795798  1.08051757]\n",
      " [-0.7280722   0.82843957]\n",
      " [ 1.03113638 -0.33228879]\n",
      " [-0.4038046  -0.56479393]\n",
      " [ 2.45781165  0.40404116]\n",
      " [ 0.66831725 -0.56593917]\n",
      " [ 0.91092624 -0.33744166]\n",
      " [ 0.68229603 -0.68448142]\n",
      " [ 0.86652767 -0.56856786]\n",
      " [ 0.76153035 -0.62778234]\n",
      " [ 1.60979402 -0.89574447]\n",
      " [-0.43726383  0.85213423]\n",
      " [-0.42666718  0.29293023]\n",
      " [-1.77732095 -0.11354673]\n",
      " [-0.35154994  0.93023322]\n",
      " [-0.6096991  -0.51010976]\n",
      " [ 0.75172755  0.51335716]\n",
      " [ 0.14199165 -1.83104281]\n",
      " [-1.42844876 -2.18762055]\n",
      " [ 1.62490772  1.09197138]\n",
      " [ 0.63396075 -1.74412843]\n",
      " [-0.17874105  2.06756818]\n",
      " [-0.4456508  -1.24333035]\n",
      " [ 0.9034627   0.87947156]\n",
      " [-0.27078797 -0.38312312]\n",
      " [-0.25002645 -0.20850532]\n",
      " [ 0.00806727 -0.94873123]\n",
      " [-1.21346415  0.76033016]\n",
      " [ 0.43351381 -0.7662867 ]\n",
      " [-1.64324264  0.18952695]\n",
      " [-0.54466044 -0.55962522]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "data = np.random.randn(150, 2)\n",
    "print(len(data[:, 0]))\n",
    "print(data[:])\n",
    "plt.scatter(data[:, 0], data[:, 1])\n",
    "plt.xlabel('Feature 1')\n",
    "plt.ylabel('Feature 2')\n",
    "plt.title('Scatter plot of 2D data')\n",
    "\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
